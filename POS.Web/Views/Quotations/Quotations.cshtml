@*@{
        ViewBag.Title = "Purchase Items From Vendor";
    }

    <style>
        .content-header {
            display: none !important;
        }
    </style>


    <div id="VendorToWarehouseHead"></div>
    <div id="VendorToWarehouseDetail"></div>

    <script src="~/Scripts/jquery-3.4.1.min.js"></script>
    <script>
        $(document).ready(function () {
            VendorToWarehouseHead();
            VendorToWarehouseDetail();
        });
        function VendorToWarehouseHead() {
            debugger
            startLoader();
            $.ajax(
                {
                    url: "/Inventory/OderHead/",
                    type: "Get"
                }
            ).done(function (result) {
                $("#VendorToWarehouseHead").html(result);
                stopLoader();
            });
        }

        function VendorToWarehouseDetail() {
            debugger
            startLoader();
            $.ajax(
                {
                    url: "/Inventory/OderDetail/",
                    type: "Get"
                }
            ).done(function (result) {
                $("#VendorToWarehouseDetail").html(result);
                stopLoader();
            });
        }

        function SaveVendorToWarehouse(modelData) {
            startLoader();
                $.ajax({
                    url: '@Url.Action("AddOder", "Inventory")',
                    contentType: 'application/json; charset=utf-8',
                    type: "POST",
                    data: JSON.stringify(modelData),
                    datatype: "Json",
                }).done(function (res) {
                    console.log(res);
                    if (res == "Error" || res == "") {
                        alertify.error("Something went wrong");
                    }
                    else if (res == "Success") {
                        alertify.success("Save successfully");
                        VendorToWarehouseHead();
                        $("#customModal").modal('hide');
                    }
                    stopLoader();
                });
        }


        function CalculateSub() {
            debugger
            VendorToWarehouseDetail();
        }


        function CalculateSubTotalAmount(itemId) {
            debugger
            var quantity = parseFloat($(`#Quantity_${itemId}`).val()).toFixed(2);
            var gst = parseFloat($(`#gst_${itemId}`).val()).toFixed(2);
            var price = parseFloat($(`#Price_${itemId}`).val()).toFixed(2);
            var subTotal = parseFloat(quantity * price).toFixed(2);
            parseFloat( $(`#SubTotal_${itemId}`).html(subTotal)).toFixed(2);


            if (itemId == "" || quantity == "" || price == "") {
                return alertify.error("values is empty");
            }
            else {

                var modelData = {
                    ItemId : itemId,
                    Price: price,
                    Quantity: quantity,
                }

                startLoader();
                $.ajax({
                    url: '@Url.Action("UpdateOder", "Inventory")',
                    contentType: 'application/json; charset=utf-8',
                    type: "POST",
                    data: JSON.stringify(modelData),
                    datatype: "Json",
                }).done(function (res) {
                    debugger

                    stopLoader();
                });
                  /*VendorToWarehouseDetail();*/
            }

        }

        function Purchasesss()
        {
            debugger
            VendorToWarehouseDetail();
        }


        function Purchase() {

            debugger


            var vendorId = $("#VendorId").val();

            var grossAmount = parseFloat($("#GrossAmount").text()).toFixed(2);
            var totalAmount = parseFloat($("#TotalAmount").text()).toFixed(2);

            var itemData = [];

            $("#tblSale tr").each(function () {
                debugger;
                $this = $(this);
                var itemId = $this.find("input.itemId").val();
                var itemName = $this.find("span.itemName").text();
                var itemPrice = $this.find("input.itemPrice").val();
                var quantity = $this.find("input.itemQuantity").val();
                var itemRemarks = $this.find("input.itemRemarks").val();

                if (itemId && quantity) {
                    var itemRow = {
                        Id: itemId,
                        Name: itemName,
                        Price: itemPrice,
                        Quantity: quantity,
                        Remarks: itemRemarks,
                    }
                    itemData.push(itemRow);
                }
            });

            if ( vendorId == "" || itemData.length == 0) {
                return alertify.error("Please Fill The Required Fields");
            }
            else {
                debugger
                var modelData = {

                    VendorId: vendorId,

                    GrossAmount: grossAmount,
                    TotalNetAmount: totalAmount,
                    RawItems: itemData,
                };

                SavePurchaseOrder(modelData);

            }

        }

        function SavePurchaseOrder(modelData) {
            debugger
            document.getElementById("Save").disabled = true;

            console.log(modelData);
            alertify.confirm("Are you sure you want to save Voucher", function (e, str) {
                if (e) {
             startLoader();
                $.ajax({
                    url: '@Url.Action("AddOder", "Inventory")',
                    contentType: 'application/json; charset=utf-8',
                    type: "POST",
                    data: JSON.stringify(modelData),
                    datatype: "Json",
                }).done(function (res) {
                    console.log(res);
                    debugger
                    if (res.Status == false) {
                        alertify.error(res.Message);
                    }
                    else if (res.Status == true) {
                        debugger

                        //  window.open("/Reports/VendortowhereHouseVocherReport.aspx?PrintId=" + res.PrintId, "_blank")
                        alertify.success(res.Message);
                        /*callReport(res.PrintId);*/
                        /* VendorToWarehouseDetail()*/

                        window.location.href = "/Inventory/OderItemsbyCreated";
                        document.getElementById("Save").disabled = false;
                        debugger

                    }
                    stopLoader();
                });
                }
                else {
                    location.reload()
                }
            }, "Default Value");
        }



        function callReport(PrintId) {
            debugger
            var fromDate = null;
            var toDate = null;
            var CategoriesID = null;
            var PrintId = PrintId

            window.open("/Reports/OderVoucherReport.aspx?fromDate=" + fromDate + "&toDate=" + toDate + "&PrintId=" + PrintId + "&CategoriesID=" + CategoriesID, "_blank")
            //alertify.alert(res.Status);
        //    window.open("/Reports/VendortowhereHouseVocherReport.aspx?PrintId=" + PrintId, "_blank")
        }
        function RemoveVendorToWarehouse(itemId) {
             startLoader();
                $.ajax({
                    url: '@Url.Action("DeleteOder", "Inventory")',
                    type: "POST",
                    data: { ItemId: itemId},
                }).done(function (res) {
                    VendorToWarehouseDetail();
                    stopLoader();
                });
        }


    </script>*@



@{
    ViewBag.Title = "Purchase Items From Vendor";
}

<style>
    .content-header {
        display: none !important;
    }
</style>


<div id="VendorToWarehouseHead"></div>
<div id="VendorToWarehouseDetail"></div>

<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script>
    $(document).ready(function () {
        VendorToWarehouseHead();
        VendorToWarehouseDetail();
    });
    function VendorToWarehouseHead() {

        startLoader();
        $.ajax(
            {
                url: "/Quotations/QuotationHead/",
                type: "Get"
            }
        ).done(function (result) {
            $("#VendorToWarehouseHead").html(result);
            stopLoader();
        });
    }

    function VendorToWarehouseDetail() {

        startLoader();
        $.ajax(
            {
                url: "/Quotations/QuotationDetail/",
                type: "Get"
            }
        ).done(function (result) {
            $("#VendorToWarehouseDetail").html(result);
            stopLoader();
        });
    }

    function SaveVendorToWarehouse(modelData) {
        startLoader();
            $.ajax({
                url: '@Url.Action("AddQuotation", "Quotations")',
                contentType: 'application/json; charset=utf-8',
                type: "POST",
                data: JSON.stringify(modelData),
                datatype: "Json",
            }).done(function (res) {
                console.log(res);
                if (res == "Error" || res == "") {
                    alertify.error("Something went wrong");
                }
                else if (res == "Success") {
                    alertify.success("Save successfully");
                    VendorToWarehouseHead();
                    $("#customModal").modal('hide');
                }
                stopLoader();
            });
    }


    function CalculateSub() {

        VendorToWarehouseDetail();
    }


    function CalculateSubTotalAmount(itemId) {



        var quantity = parseFloat($(`#Quantity_${itemId}`).val()).toFixed(2);
        var gst = parseFloat($(`#gst_${itemId}`).val()).toFixed(2);
        var price = parseFloat($(`#Price_${itemId}`).val()).toFixed(2);
        var subTotal = parseFloat(quantity * price).toFixed(2);
        parseFloat( $(`#SubTotal_${itemId}`).html(subTotal)).toFixed(2);


        if (itemId == "" || quantity == "" || price == "") {
            return alertify.error("values is empty");
        }
        else {

            var modelData = {
                ItemId : itemId,
                Price: price,
                Quantity: quantity,
            }

            startLoader();
            $.ajax({
                url: '@Url.Action("UpdateQuotation", "Quotations")',
                contentType: 'application/json; charset=utf-8',
                type: "POST",
                data: JSON.stringify(modelData),
                datatype: "Json",
            }).done(function (res) {


                stopLoader();
            });
              /*VendorToWarehouseDetail();*/
        }

    }

    function Purchasesss()
    {

        VendorToWarehouseDetail();
    }


    function Purchase() {

        debugger
        var quotationDate = $("#QuotationDate").val();
        var dateOFSupplyDate = $("#DateOFSupplyDate").val();
        var paymentDate = $("#PaymentDate").val();
        var voildUptoDate = $("#VoildUptoDate").val();
        var pono = $("#Pono").val();
        var vendorId = $("#VendorId").val();
        var remarks = $("#Remarks").val();
        var grossAmount = parseFloat($("#GrossAmount").text()).toFixed(2);
        var totalAmount = parseFloat($("#TotalAmount").text()).toFixed(2);

        var itemData = [];

        $("#tblSale tr").each(function () {

            $this = $(this);
            var itemId = $this.find("input.itemId").val();
            var itemName = $this.find("span.itemName").text();
            var itemPrice = $this.find("input.itemPrice").val();
            var quantity = $this.find("input.itemQuantity").val();
            var itemRemarks = $this.find("input.itemRemarks").val();

            if (itemId && quantity) {
                var itemRow = {
                    Id: itemId,
                    Name: itemName,
                    Price: itemPrice,
                    Quantity: quantity,
                    Remarks: itemRemarks,
                }
                itemData.push(itemRow);
            }
        });

        if ( vendorId == "" ) {
            return alertify.error("Please Fill The Required Fields");
        }
        else {

            var modelData = {
                QuotationDate: quotationDate,
                DateOFSupplyDate: dateOFSupplyDate,
                PaymentDate: paymentDate,
                VoildUptoDate: voildUptoDate,
                Pono: pono,
                //DocNo: docNo,
                VendorId: vendorId,
                Remarks: remarks,
                GrossAmount: grossAmount,
                TotalNetAmount: totalAmount,
                RawItems: itemData,
            };

            SavePurchaseOrder(modelData);

        }

    }

    function SavePurchaseOrder(modelData) {

        document.getElementById("Save").disabled = true;
        debugger
        console.log(modelData);
        alertify.confirm("Are you sure you want to save Voucher", function (e, str) {
            if (e) {
         startLoader();
            $.ajax({
                url: '@Url.Action("AddQuotation", "Quotations")',
                contentType: 'application/json; charset=utf-8',
                type: "POST",
                data: JSON.stringify(modelData),
                datatype: "Json",
            }).done(function (res) {
                console.log(res);

                if (res.Status == false) {
                    alertify.error(res.Message);
                }
                else if (res.Status == true) {

                    debugger
                 // window.open("/Reports/VendortowhereHouseVocherReport.aspx?PrintId=" + res.PrintId, "_blank")
                    alertify.success(res.Message);

                    callReport(res.PrintId);
                    /* VendorToWarehouseDetail()*/

                    window.location.href = "/Quotations/GetAllQuotationItems";
                    document.getElementById("Save").disabled = false;


                }
                stopLoader();
            });
            }
            else {
                location.reload()
            }
        }, "Default Value");
    }



    function callReport(PrintId) {
        debugger
        var fromDate = null;
        var toDate = null;
        var CategoriesID = null;
        var PrintId = PrintId

        window.open("/Reports/OderVoucherReport.aspx?fromDate=" + fromDate + "&toDate=" + toDate + "&PrintId=" + PrintId + "&CategoriesID=" + CategoriesID, "_blank")
            //alertify.alert(res.Status);
        //    window.open("/Reports/VendortowhereHouseVocherReport.aspx?PrintId=" + PrintId, "_blank")
    }
    function RemoveVendorToWarehouse(itemId) {
         startLoader();
            $.ajax({
                url: '@Url.Action("DeleteVendorToWarehouse", "Inventory")',
                type: "POST",
                data: { ItemId: itemId},
            }).done(function (res) {
                VendorToWarehouseDetail();
                stopLoader();
            });
    }


</script>

